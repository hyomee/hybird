plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    // queryDSL 추가
    // id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.hyomee'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    /**********************************************
     * db 관련
     **********************************************/
    // db 관련
    runtimeOnly 'com.h2database:h2'
    //runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    // mybatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // QueryDSL Implementation
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    /**********************************************
     * NoSql
     **********************************************/
    // implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    // implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    /**********************************************
     * Message 관련
     **********************************************/
    // implementation 'org.springframework.boot:spring-boot-starter-amqp'
    // implementation 'org.springframework.boot:spring-boot-starter-websocket'

    /**********************************************
     * 생산성
     **********************************************/
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    /**********************************************
     * util
     **********************************************/
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.13.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    /**********************************************
     * Spring Boot 도구
     **********************************************/
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    /**********************************************
     * Test
     **********************************************/
    // testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

/**
 * QueryDSL Build Options
 */
def querydslDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

//tasks.withType(JavaCompile) {
//    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
//}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}
